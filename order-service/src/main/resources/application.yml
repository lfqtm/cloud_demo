server:
  port: 8080
spring:
  application:
    name: orderservice
  datasource:
#    url: jdbc:mysql://localhost:3306/cloud_order?useSSL=false
    # 容器化部署，localhost换成docker-compose-yml中配置的 mysql
    url: jdbc:mysql://mysql:3306/cloud_order?useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
  #nacos
  cloud:
    nacos:
#      server-addr: localhost:8848
      # 容器化部署方式 改为nacos:8848
      server-addr: nacos:8848 # nacos地址,从nacos中获取微服务的地址
      discovery:
        cluster-name: SH
#        namespace: e6ca71b9-2a79-4fb6-aaf7-14e67a51f159 #命名空间id
#        ephemeral: false # 设置为非临时实例
#        group: group1

#eureka:
#      client:
#        service-url:
#          defaultZone: http://127.0.0.1:10086/eureka
#      instance: # 在Eureka中显示服务的ip地址
#        ip-address: 127.0.0.1 # 配置服务器ip地址
#        prefer-ip-address: true # 更倾向于使用ip,而不是host名
#        instance-id: ${eureka.instance.ip-address}:${server.port} # 自定义实例的id
mybatis:
  type-aliases-package: cn.itcast.user.pojo
  configuration:
    map-underscore-to-camel-case: true
logging:
  level:
    cn.itcast: debug
  pattern:
    dateformat: MM-dd HH:mm:ss:SSS

#==============================nacos负载均衡策略
userservice:
  ribbon:
    NFLoadBalancerRuleClassName: com.alibaba.cloud.nacos.ribbon.NacosRule # 负载均衡规则
    eager-load:
      enabled: true
      clients: userservice

#==============================feign日志级别
feign:
  client:
    config:
      userservice: # 针对某个微服务的配置
        loggerLevel: BASIC
  httpclient:
    enabled: true # 开启feign对HttpClient的支持
    max-connections: 200 # 最大的连接数
    max-connections-per-route: 50 # 每个路径的最大连接数

#feign:
#  client:
#    config:
#      default: # 这里用default就是全局配置，如果是写服务名称，则是针对某个微服务的配置
#        loggerLevel: FULL #  日志级别
